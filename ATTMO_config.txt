import numpy as np

# index
symbol_1 = 'BTC'
symbol_2 = 'FDUSD'


# attmo settings
attmoForecastLabels = ['Stormy', 'Rainy', 'Cloudy', 'Mostly sunny', 'Sunny', 'Tropical']
timeHorizons = ['shortterm', '1h', '4h', '1d', '3d', '1w']
startingValuesTrendStrength = [9, 20, 42, 59, 75, 92]                                                                        # old ATTMO
trendForecastLabels = ['bearish_very_extended', 'bearish_extended', 'bearish_very', 'bearish', 'bearish_neutral',            # old ATTMO
                  'bullish_neutral', 'bullish', 'bullish_very', 'bullish_extended', 'bullish_very_extended']


# interpolation settings
log_spaced_values = np.logspace(1, -3, 30)
thresholdsForInterpolation = list(np.round(np.flip(log_spaced_values)/100,7))
list_1 = [0.05, 0.02, 0.005]
list_2 = [x / 10 for x in list_1]
desiredEventFrequenciesList = [list_1]
for _ in range(2):
    new_list = [x / 2 for x in desiredEventFrequenciesList[-1]]
    desiredEventFrequenciesList.append(new_list)
desiredEventFrequenciesList.append(list_2)
for _ in range(2):
    new_list = [x / 2 for x in desiredEventFrequenciesList[-1]]
    desiredEventFrequenciesList.append(new_list)
blockLengths = []
for i in range(len(desiredEventFrequenciesList)):
    blockLengths.append(100/(desiredEventFrequenciesList[i][2]*100))


# prediction settings
predictionFactor = 3


# saving settings
saveTickData = 1
saveInterpolationData = 1
saveSignalDetectionData = 1
savePredictionData = 1


# configuration settings
runOnLocal = 1
runOnNotebook = 1
verbose = 1
clearOutput = 0
